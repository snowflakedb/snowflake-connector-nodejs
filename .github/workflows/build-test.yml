name: Build and Test

on:
    push:
        branches:
            - master
        tags:
            - v*
    pull_request:
        branches:
            - master
            - prep-**
    workflow_dispatch:
        inputs:
          logLevel:
            default: warning
            description: "Log level"
            required: true
          tags: 
            description: "Test scenario tags"

concurrency:
  # older builds for the same pull request numer or branch should be cancelled
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Build
              shell: bash
              env:
                WHITESOURCE_API_KEY: ${{ secrets.WHITESOURCE_API_KEY }}
              run: ./ci/build.sh
            - name: Upload Build Artifact
              uses: actions/upload-artifact@v3
              with:
                name: artifacts
                path: artifacts

    test-mac:
        needs: build
        name: Tests on Mac
        runs-on: macos-13
        strategy:
            fail-fast: false
            matrix:
                cloud: [ 'AWS', 'AZURE', 'GCP' ]
                nodeVersion: [ '14.x', '16.x', '18.x', '20.x']
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.nodeVersion }}
            - uses: actions/setup-python@v4
              with:
                python-version: '3.7'
            - name: Download Build Artifacts
              uses: actions/download-artifact@v3
              with:
                name: artifacts
                path: artifacts
            - name: Install Homebrew Bash
              shell: bash
              run: brew install bash
            - name: Tests
              shell: bash
              env:
                PARAMETERS_SECRET: ${{ secrets.PARAMETERS_SECRET }}
                CLOUD_PROVIDER: ${{ matrix.cloud }}
              run: /usr/local/bin/bash ./ci/test_mac.sh
            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v3
              with:
                # without the token code cov may fail because of Github limits https://github.com/codecov/codecov-action/issues/557
                token: ${{ secrets.CODE_COV_UPLOAD_TOKEN }}
                fail_ci_if_error: true

    test-windows:
        needs: build
        name: Tests on Windows
        runs-on: windows-latest
        strategy:
            fail-fast: false
            matrix:
                cloud: [ 'AWS', 'AZURE', 'GCP' ]
                nodeVersion: [ '14.x', '16.x', '18.x', '20.x']
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.nodeVersion }}
            - uses: actions/setup-python@v4
              with:
                python-version: '3.7'
                architecture: 'x64'
            - name: Download Build Artifacts
              uses: actions/download-artifact@v3
              with:
                name: artifacts
                path: artifacts
            - name: Tests
              shell: cmd
              env:
                PARAMETERS_SECRET: ${{ secrets.PARAMETERS_SECRET }}
                CLOUD_PROVIDER: ${{ matrix.cloud }}
              run: ci\\test_windows.bat

    test-linux:
        needs: build
        name: Tests on Linux
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                image: [ 'nodejs-centos7-node14', 'nodejs-centos7-fips']
                cloud: [ 'AWS', 'AZURE', 'GCP' ]
        steps:
            - uses: actions/checkout@v4
            - name: Download Build Artifacts
              uses: actions/download-artifact@v3
              with:
                name: artifacts
                path: artifacts
            - name: Tests
              shell: bash
              env:
                PARAMETERS_SECRET: ${{ secrets.PARAMETERS_SECRET }}
                CLOUD_PROVIDER: ${{ matrix.cloud }}
                TARGET_DOCKER_TEST_IMAGE: ${{ matrix.image }}
              run: ./ci/test.sh

    test-ubuntu:
      needs: build
      name: Tests on Ubuntu
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          cloud: [ 'AWS', 'AZURE', 'GCP' ]
          nodeVersion: ['18.x', '20.x']
      steps:
        - uses: actions/checkout@v4
        - name: Download Build Artifacts
          uses: actions/download-artifact@v3
          with:
            name: artifacts
            path: artifacts
        - name: Use Node.js
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
        - name: Tests
          shell: bash
          env:
            PARAMETERS_SECRET: ${{ secrets.PARAMETERS_SECRET }}
            CLOUD_PROVIDER: ${{ matrix.cloud }}
          run: ./ci/test_ubuntu.sh
        - name: Upload coverage reports to Codecov
          uses: codecov/codecov-action@v3
          with:
            # without the token code cov may fail because of Github limits https://github.com/codecov/codecov-action/issues/557
            token: ${{ secrets.CODE_COV_UPLOAD_TOKEN }}
            fail_ci_if_error: true


