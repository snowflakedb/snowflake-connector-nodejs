name: Build and Test

on:
    push:
        branches:
            - master
        tags:
            - v*
    pull_request:
        branches:
            - master
            - prep-**
    workflow_dispatch:
        inputs:
          logLevel:
            default: warning
            description: "Log level"
            required: true
          tags: 
            description: "Test scenario tags"

concurrency:
  # older builds for the same pull request numer or branch should be cancelled
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - name: Build
              shell: bash
              env:
                WHITESOURCE_API_KEY: ${{ secrets.WHITESOURCE_API_KEY }}
              run: ./ci/build.sh
            - name: Upload Build Artifact
              uses: actions/upload-artifact@v1
              with:
                name: artifacts
                path: artifacts

    test-mac-required:
        needs: build
        name: Tests on Mac
        runs-on: macos-latest
        strategy:
            matrix:
                cloud: [ 'AWS' ]
        steps:
            - uses: actions/checkout@v1
            - uses: actions/setup-node@v1
              with:
                node-version: '12.x'
            - uses: actions/setup-python@v1
              with:
                python-version: '3.7'
            - name: Download Build Artifacts
              uses: actions/download-artifact@v1
              with:
                name: artifacts
            - name: Install Homebrew Bash
              shell: bash
              run: brew install bash
            - name: Tests
              shell: bash
              env:
                PARAMETERS_SECRET: ${{ secrets.PARAMETERS_SECRET }}
                CLOUD_PROVIDER: ${{ matrix.cloud }}
              run: /usr/local/bin/bash ./ci/test_mac.sh
            - uses: actions/upload-artifact@master
              with:
                name: codeCoverage
                path: .nyc_output

    test-windows-required:
        needs: build
        name: Tests on Windows
        runs-on: windows-latest
        strategy:
            matrix:
                cloud: [ 'AWS' ]
        steps:
            - uses: actions/checkout@v1
            - uses: actions/setup-node@v1
              with:
                node-version: '12.x'
            - uses: actions/setup-python@v1
              with:
                python-version: '3.7'
                architecture: 'x64'
            - name: Download Build Artifacts
              uses: actions/download-artifact@v1
              with:
                name: artifacts
            - name: Tests
              shell: cmd
              env:
                PARAMETERS_SECRET: ${{ secrets.PARAMETERS_SECRET }}
                CLOUD_PROVIDER: ${{ matrix.cloud }}
              run: ci\\test_windows.bat

    test-linux-required:
        needs: build
        name: Tests on Linux
        runs-on: ubuntu-latest
        strategy:
            matrix:
                image: [ 'nodejs-centos6-default', 'nodejs-centos7-node12' ]
                cloud: [ 'AWS' ]
        steps:
            - uses: actions/checkout@v1
            - uses: actions/setup-node@v1
              with:
                node-version: '12.x'
            - uses: actions/setup-python@v1
              with:
                python-version: '3.7'
            - name: Download Build Artifacts
              uses: actions/download-artifact@v1
              with:
                name: artifacts
            - name: Tests
              shell: bash
              env:
                PARAMETERS_SECRET: ${{ secrets.PARAMETERS_SECRET }}
                CLOUD_PROVIDER: ${{ matrix.cloud }}
                TARGET_DOCKER_TEST_IMAGE: ${{ matrix.image }}
              run: ./ci/test.sh

    test-mac-optional:
        needs: test-mac-required
        name: Tests on Mac
        runs-on: macos-latest
        strategy:
            matrix:
                cloud: [ 'AZURE', 'GCP' ]
        steps:
            - uses: actions/checkout@v1
            - uses: actions/setup-node@v1
              with:
                node-version: '12.x'
            - uses: actions/setup-python@v1
              with:
                python-version: '3.7'
            - name: Download Build Artifacts
              uses: actions/download-artifact@v1
              with:
                name: artifacts
            - name: Install Homebrew Bash
              shell: bash
              run: brew install bash
            - name: Tests
              shell: bash
              env:
                PARAMETERS_SECRET: ${{ secrets.PARAMETERS_SECRET }}
                CLOUD_PROVIDER: ${{ matrix.cloud }}
              run: /usr/local/bin/bash ./ci/test_mac.sh

    test-windows-optional:
        needs: test-windows-required
        name: Tests on Windows
        runs-on: windows-latest
        strategy:
            matrix:
                cloud: [ 'AZURE', 'GCP' ]
        steps:
            - uses: actions/checkout@v1
            - uses: actions/setup-node@v1
              with:
                node-version: '12.x'
            - uses: actions/setup-python@v1
              with:
                python-version: '3.7'
                architecture: 'x64'
            - name: Download Build Artifacts
              uses: actions/download-artifact@v1
              with:
                name: artifacts
            - name: Tests
              shell: cmd
              env:
                PARAMETERS_SECRET: ${{ secrets.PARAMETERS_SECRET }}
                CLOUD_PROVIDER: ${{ matrix.cloud }}
              run: ci\\test_windows.bat

    test-linux-optional:
        needs: test-linux-required
        name: Tests on Linux
        runs-on: ubuntu-latest
        strategy:
            matrix:
                image: [ 'nodejs-centos6-default', 'nodejs-centos7-node12' ]
                #REMOVE AZURE for now
                #cloud: [ 'AZURE', 'GCP' ]
                cloud: [ 'GCP' ]
        steps:
            - uses: actions/checkout@v1
            - uses: actions/setup-node@v1
              with:
                node-version: '12.x'
            - uses: actions/setup-python@v1
              with:
                python-version: '3.7'
            - name: Download Build Artifacts
              uses: actions/download-artifact@v1
              with:
                name: artifacts
            - name: Tests
              shell: bash
              env:
                PARAMETERS_SECRET: ${{ secrets.PARAMETERS_SECRET }}
                CLOUD_PROVIDER: ${{ matrix.cloud }}
                TARGET_DOCKER_TEST_IMAGE: ${{ matrix.image }}
              run: ./ci/test.sh

    display_code_coverage:
        needs: test-mac-required
        name: Display code coverage
        runs-on: macos-latest
        steps:
          - uses: actions/checkout@v1
          - uses: actions/setup-node@v1
            with:
              node-version: '18.x'
          - name: Download Build Artifacts
            uses: actions/download-artifact@v1
            with:
              name: artifacts
          - uses: actions/download-artifact@master
            with:
              name: codeCoverage
              path: .nyc_output
          - name: Display code coverage
            shell: bash
            run: npx nyc report --reporter=text
